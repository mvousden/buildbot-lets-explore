# -*- python -*-

from buildbot.plugins import changes, schedulers, steps, util, worker


# BuildmasterConfig is read by Buildbot.
conf = BuildmasterConfig = {}


# Define worker and connection information.
slaveName = "example-worker"
slave = worker.Worker(slaveName, "pass")
port = 9989

# Define triggers for operations (build and test). Will poll the repository for
# changes on the branch.
thisRepoURL = "git://github.com/mvousden/buildbot-lets-explore"
repoBranch = "example-master"
sourceChange = changes.GitPoller(thisRepoURL,
                                 branch=repoBranch,
                                 workdir="gitpoller-workdir",
                                 pollinterval=300)

# Define operations to be conduced by the workers.
checkout = steps.Git(repourl=thisRepoURL,
                     branch=repoBranch,
                     haltOnFailure=True)

runTests = steps.ShellCommand(name="pytest",
                              command=["py.test"],
                              haltOnFailure=True)

buildPackageOps = [steps.ShellCommand(name="build package {}".format(zI),
                                      command=["make", "first" if zI is 1 elif
                                                       "second" if zI is 2 else
                                                       "third"],
                                      haltOnFailure=True)\
                   for zI in range(1, 4)]

# Create build factories from operations, one for running tests, and one for
# performing builds.
testFactory = util.BuildFactory()
testFactory.addSteps([checkout, runTests])

buildFactory = util.BuildFactory()
buildFactory.addSteps([checkout] + buildPackageOps)

# Create builders from the build factories, which use slave workers to complete
# tasks from the factories..
testBuilder = util.BuilderConfig(name="test",
                                 workernames=[slaveName],
                                 factory=testFactory)

buildBuilder = util.BuilderConfig(name="build",
                                  workernames=[slaveName],
                                  factory=buildFactory)

# Create schedulers. First two allows builds to be triggered from the web
# interface. Second two track changes to source using sourceChange.
forceTestScheduler = schedulers.ForceScheduler(name="manual test",
                                               builderNames=testBuilder.name)
forceBuildScheduler = schedulers.ForceScheduler(name="manual build",
                                                builderNames=buildBuilder.name)

branchTestScheduler = schedulers.SingleBranchScheduler(
                          name="build from polling",
                          change_filter=util.ChangeFilter(
                              branch=repoBranch),
                          builderNames=testBuilder.name)

branchBuildScheduler = schedulers.SingleBranchScheduler(
                           name="build from polling",
                           change_filter=util.ChangeFilter(
                               branch=repoBranch),
                           builderNames=testBuilder.name)


# Add resources to the configuration dictionary.
conf["builders"] = [testBuilder, buildBuilder]
conf["workers"] = [slave]
conf["protocols"] = {"pb": {"port": port}}
conf["change_source"] = [sourceChange]
conf["schedulers"] = [forceTestScheduler, forceBuildScheduler,
                      branchTestScheduler, branchBuildScheduler]

# Some master configuration for the GUI.
conf["title"] = "Let's explore Buildbot!"
conf["buildbotURL"] = "http://localhost:8010/"
conf["www"] = dict(port=8010,
                   plugins={"waterfall_view": {}, "console_view": {}})
conf["db"] = {"db_url": "sqlite:///state.sqlite"}
